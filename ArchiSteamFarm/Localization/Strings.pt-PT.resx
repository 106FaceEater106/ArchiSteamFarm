<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <data name="AutoUpdateCheckInfo" xml:space="preserve">
    <value>O ASF vai automaticamente procurar por novas versões a cada {0}.</value>
    <comment>{0} will be replaced by translated TimeSpan string (such as "24 hours")</comment>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Conteúdo:
{0}</value>
    <comment>{0} will be replaced by content string. Please note that this string should include newline for formatting.</comment>
  </data>
  
  
  <data name="ErrorEarlyFatalExceptionPrint" xml:space="preserve">
    <value>Exceção: {0}() {1}
StackTrace:
{2}</value>
    <comment>{0} will be replaced by function name, {1} will be replaced by exception message, {2} will be replaced by entire stack trace. Please note that this string should include newlines for formatting.</comment>
  </data>
  
  
  
  <data name="ErrorIsInvalid" xml:space="preserve">
    <value>{0} é inválido!</value>
    <comment>{0} will be replaced by object's name</comment>
  </data>
  
  
  <data name="ErrorObjectIsNull" xml:space="preserve">
    <value>{0} é nulo!</value>
    <comment>{0} will be replaced by object's name</comment>
  </data>
  
  <data name="ErrorRequestFailedTooManyTimes" xml:space="preserve">
    <value>O pedido falhou após {0} tentativas!</value>
    <comment>{0} will be replaced by maximum number of tries</comment>
  </data>
  
  
  
  
  <data name="Exiting" xml:space="preserve">
    <value>A sair...</value>
  </data>
  
  
  
  
  <data name="LoggingIn" xml:space="preserve">
    <value>A iniciar sessão em {0}...</value>
    <comment>{0} will be replaced by service's name</comment>
  </data>
  
  
  
  
  <data name="Starting" xml:space="preserve">
    <value>A iniciar...</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Sucesso!</value>
  </data>
  
  <data name="UpdateCheckingNewVersion" xml:space="preserve">
    <value>A verificar por novas versões...</value>
  </data>
  
  <data name="UpdateFinished" xml:space="preserve">
    <value>Processo de atualização terminado!</value>
  </data>
  
  <data name="UpdateVersionInfo" xml:space="preserve">
    <value>Versão local: {0} | Versão remota: {1}</value>
    <comment>{0} will be replaced by current version, {1} will be replaced by remote version</comment>
  </data>
  
  
  
  
  
  
  
  
  <data name="IPCReady" xml:space="preserve">
    <value>Servidor IPC pronto!</value>
  </data>
  
  
  <data name="BotNotFound" xml:space="preserve">
    <value>Não foi possível encontrar qualquer bot chamado {0}!</value>
    <comment>{0} will be replaced by bot's name query (string)</comment>
  </data>
  
  
  
  
  
  
  <data name="Done" xml:space="preserve">
    <value>Feito!</value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <data name="UnknownCommand" xml:space="preserve">
    <value>Comando desconhecido!</value>
  </data>
  
  
  
  
  <data name="BotAddLicense" xml:space="preserve">
    <value>ID: {0} | Estado: {1}</value>
    <comment>{0} will be replaced by game's ID (number), {1} will be replaced by status string</comment>
  </data>
  
  <data name="BotAlreadyRunning" xml:space="preserve">
    <value>Este bot já está em funcionamento!</value>
  </data>
  <data name="BotAuthenticatorConverting" xml:space="preserve">
    <value>A converter ficheiro .maFile em formato ASF...</value>
  </data>
  
  <data name="BotAuthenticatorInvalidDeviceID" xml:space="preserve">
    <value>O DeviceID está incorreto ou não existe!</value>
  </data>
  
  
  
  
  
  <data name="BotConnected" xml:space="preserve">
    <value>Conectado ao Steam!</value>
  </data>
  
  
  
  
  
  
  
  <data name="BotLoggingIn" xml:space="preserve">
    <value>A iniciar sessão...</value>
  </data>
  
  <data name="BotLootingFailed" xml:space="preserve">
    <value>A proposta de troca falhou!</value>
  </data>
  
  
  
  
  
  
  
  <data name="BotRateLimitExceeded" xml:space="preserve">
    <value>Taxa de limite excedida, tentaremos novamente daqui a {0}...</value>
    <comment>{0} will be replaced by translated TimeSpan string (such as "25 minutes")</comment>
  </data>
  
  
  
  
  
  
  
  <data name="BotStatusNotRunning" xml:space="preserve">
    <value>O bot não está ligado.</value>
  </data>
  
  <data name="BotStatusPlayingNotAvailable" xml:space="preserve">
    <value>O bot está a ser usado.</value>
  </data>
  <data name="BotUnableToLogin" xml:space="preserve">
    <value>Não foi possível iniciar sessão no Steam: {0}/{1}</value>
    <comment>{0} will be replaced by failure reason (string), {1} will be replaced by extended failure reason (string)</comment>
  </data>
  <data name="ErrorIsEmpty" xml:space="preserve">
    <value>{0} está vazio!</value>
    <comment>{0} will be replaced by object's name</comment>
  </data>
  
  <data name="WarningFailedWithError" xml:space="preserve">
    <value>Falha devido ao erro: {0}</value>
    <comment>{0} will be replaced by failure reason (string)</comment>
  </data>
  
  
  
  
  
  
  <data name="BotStopping" xml:space="preserve">
    <value>A parar...</value>
  </data>
  
  
  
  
  <data name="Welcome" xml:space="preserve">
    <value>Parece que é tua primeira vez a iniciar este programa, bem-vindo(a)!</value>
  </data>
  
  
  
  
  <data name="BotVersion" xml:space="preserve">
    <value>{0} V{1}</value>
    <comment>{0} will be replaced by program's name (e.g. "ASF"), {1} will be replaced by program's version (e.g. "1.0.0.0"). This string typically has nothing to translate and you should leave it as it is, unless you need to change the format, e.g. in RTL languages.</comment>
  </data>
  
  
  <data name="ErrorFunctionOnlyInHeadlessMode" xml:space="preserve">
    <value>Esta função só está disponível no modo headless!</value>
  </data>
  
  <data name="ErrorAccessDenied" xml:space="preserve">
    <value>Acesso negado!</value>
  </data>
  
  <data name="BotStats" xml:space="preserve">
    <value>Uso de memória atual: {0} MB.</value>
    <comment>{0} will be replaced by number (in megabytes) of memory being used</comment>
  </data>
  
  
  <data name="BotOwnsOverviewPerGame" xml:space="preserve">
    <value>{0}/{1} bots já possuem o jogo {2}.</value>
    <comment>{0} will be replaced by number of bots that already own particular game being checked, {1} will be replaced by total number of bots that were checked during the process, {2} will be replaced by game's ID (number)</comment>
  </data>
  
  
  <data name="BotAcceptedDonationTrade" xml:space="preserve">
    <value>Doação aceite: {0}</value>
    <comment>{0} will be replaced by trade's ID (number)</comment>
  </data>
  
  
  <data name="BotWalletBalance" xml:space="preserve">
    <value>Saldo da Carteira: {0} {1}</value>
    <comment>{0} will be replaced by wallet balance value, {1} will be replaced by currency name</comment>
  </data>
  
  <data name="BotLevel" xml:space="preserve">
    <value>O bot está a nível {0}.</value>
    <comment>{0} will be replaced by bot's level</comment>
  </data>
  
  
  
  
  
  <data name="PluginLoaded" xml:space="preserve">
    <value>{0} foi carregado com sucesso!</value>
    <comment>{0} will be replaced by the name of the custom ASF plugin</comment>
  </data>
  
  
  
  
  <data name="EnterCommand" xml:space="preserve">
    <value>Inserir comando: </value>
  </data>
  
  
  
  
  
  
  
  
  
  
  
</root>
